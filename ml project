import sys
print('python: {}'.format(sys.version))
import scipy
print('Scipy: {}'.format(scipy._version_))
import numpy
print('Numpy: {}'.format(numpy._version_))
import matplotlib 
print('Matplotlib: {}'.format(matplotlib._version_))
import sklearn
print('Slearn: {}'.format(sklearn._version_))
import pandas
print('Pandas: {}'.format(pandas._version_))


import pandas
from pandas import read_csv
from pandas.plotting import scatter_matrix
from matplotlib import pyplot
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import StratifiedKFold
from sklearn.model_selection import classification_report
from sklearn.model_selection import confusion_matrix
from sklearn.model_selection import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.discriminate_analysis import LinearDiscriminatAnalysis
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC
from sklearn import model_selection
from sklearn.ensemble import VotingClassifier


url = "https://gist.github.com/netj/8836201#file-iris-csv"
names = ['sepal-length','sepal-width','petal-length','petal-width','class']
dataset = read_csv(url,names=names)


print(dataset.shape)
print(dataset.head(20))

print(dataset.discribe())

print(dataset.groupby('class').size())

dataset.plot(kind='box',subplot=True,layout=(2,2),sharex=False,sharey=False)

dataset.hist()
pyplot.show()

scatter_matrix(dataset)
pyplot.show()

array = dataset.values
x = array[:, 0:4]
y = array[:, 4]
X_train,X_valudation,Y_train,Y_validation = train_test_split(x,y,test_size=0.2,random_state=1)

#buliding models
models = []
models.append(('LR',LogesticRegression(solver='liblinear',multi_class='ovr')))
models.append(('LDA',LinearDiscriminatAnalysis()))
models.append(('KNN',KNeighborsClassifier()))
models.append(('NB',GaussianNB()))
models.append(('svm',SVC(gamma='auto')))

results = []
names = []
for name,model in models:
    kfold = StratifiedKFold(n_splits=10,random_state=1)
    cv_results=cross_val_score(model,X_train,Y_train,cv=kfold,scoring='accuracy')
    results.append(cv_results)
    names.append(name)
    print('%s: %f (%f)' % (name,cv_results.mean(),cv_results.std()))
    
    
    pyplot.boxplot(results,labels=names)
pyplot.title('Algorithm Comparision')
pyplot.show()

model = SVC(gamma='auto')
model.fit(X_train,Y_train)
predictions = model.predict(X_validation)


print(accuracy_score(Y_validapredictionstion,))
print(confusion_matrix(Y_validation,predictions))
print(Classification_report(Y_validation,predictions))
